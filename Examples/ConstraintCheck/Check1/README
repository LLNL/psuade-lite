Simple problem

Y = X1 + X2 + X1 * X2

X1, X2 = [0, 1]

with constraint that 0 <= X1+X2 <= 1.0

Objective: Compute sensitivity indices in the presence of 
           inequality constraints.

***************************************************************
Steps:

1. cc -o simulator simulator.c -lm

2. Compute sensitivity indices with no constraints
   using MARS response surface

   psuade psuadeNoFilter.in

3. Compute sensitivity indices with constraints

   How to set up constraints: need 2 files
      index file to indicate which variables are involved in
           the constraint (in this case both X1 and X2)
           Hence, in indexFile we have
           2  <has to be the same as the total number of inputs)
           1 0.0  <input 1 is used, thus the 2nd field is not needed, set to 0)
           2 0.0  <input 2 is used, thus the 2nd field is not needed, set to 0)
           0 0.1  <if there is an input 3 and it is not used, then the first
                   field is set to 0 and the second set to the default value>
      psuadeFilterData - this file is used to create a response surface for
           variable 1 and 2 to the constraint value (X1 + X2 in this case)
           Subsequent constraining is via evaluating this response surface

      In the psuadeWithFilter file, there is an additional line
           analyzer rsfilter = psuadeFilterData indexFile 0.0 1.0
 
           The first 2 fields have been explained, the last 2 are the lower
              and upper bound.
           So during filtering, psuade compute Y=X1+X2+X1*X2 and X1+X2 (via
              psuadeFilterData and indexFile) and determines whether to 
              invalidate Y by checking the values of X1+X2 (in [0,1]).

4. Another way to do this for checking (using replicated LH):

   run: psuade psuadeRS.in

   copy psuadeData to RSdata

   psuade psuadeRLH.in


